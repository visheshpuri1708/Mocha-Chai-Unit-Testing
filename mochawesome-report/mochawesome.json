{
  "stats": {
    "suites": 4,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2022-12-26T01:51:19.825Z",
    "end": "2022-12-26T01:51:20.087Z",
    "duration": 262,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dc01b340-4e18-49a0-aab4-f7c470aa3ae6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 44,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newuser = await createUser();",
          "err": {},
          "uuid": "e3ce9dd7-36e8-4261-9061-46d82b81692d",
          "parentUUID": "dc01b340-4e18-49a0-aab4-f7c470aa3ae6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 13,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newuser = await createUser();",
          "err": {},
          "uuid": "17124f46-c1b9-4ee8-ac71-fe1cb7ee216d",
          "parentUUID": "dc01b340-4e18-49a0-aab4-f7c470aa3ae6",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 10,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newuser = await createUser();",
          "err": {},
          "uuid": "f2a618e5-7a60-4715-94f3-f06e7849aa15",
          "parentUUID": "dc01b340-4e18-49a0-aab4-f7c470aa3ae6",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3be0208-0baf-4ed0-8821-d70aa69d4d9b",
          "title": "Create New User",
          "fullFile": "/home/vishesh/Documents/Mocha Chai/test/create_user.js",
          "file": "/test/create_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User Correctly Created",
              "fullTitle": "Create New User User Correctly Created",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    name: \"Jon Doe\",\n    email: \"doe@gmail.com\",\n    age: 21\n};\nconst response = await axios.post(API_URL + \"/postuserinfo\", payload);\nexpect(response.status).to.be.equal(201);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "770ddef1-9403-4028-b478-d10cb0cd17ae",
              "parentUUID": "a3be0208-0baf-4ed0-8821-d70aa69d4d9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Correctly Created Without Adding User Name",
              "fullTitle": "Create New User User Correctly Created Without Adding User Name",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n            const payload = {\n                email: \"doe@gmail.com\",\n                age: 21\n            };\n            const response = await axios.post(API_URL + \"/postuserinfo\", payload);\n            expect(response.status).not.to.be.equal(201);\n            expect(response.data).to.be.an(\"object\");\n        } catch (error) {\n            if (error.response) {\n                expect(error.response.status).not.to.be.equal(201);\n            } else {\n                throw error;\n            }\n        }",
              "err": {},
              "uuid": "f0e73911-ea0e-4b1c-9b58-e83b583f7e2f",
              "parentUUID": "a3be0208-0baf-4ed0-8821-d70aa69d4d9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Correctly Created Without Adding Email",
              "fullTitle": "Create New User User Correctly Created Without Adding Email",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n            const payload = {\n                name: \"Jon Doe\",\n                age: 21\n            };\n            const response = await axios.post(API_URL + \"/postuserinfo\", payload);\n            expect(response.status).not.to.be.equal(201);\n            expect(response.data).to.be.an(\"object\");\n        } catch (error) {\n            if (error.response) {\n                expect(error.response.status).not.to.be.equal(201);\n            } else {\n                throw error;\n            }\n        }",
              "err": {},
              "uuid": "4ac40d9d-6b84-4a57-b363-687eea72dabd",
              "parentUUID": "a3be0208-0baf-4ed0-8821-d70aa69d4d9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Correctly Created Without Adding Age",
              "fullTitle": "Create New User User Correctly Created Without Adding Age",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n            const payload = {\n                name: \"Jon Doe\",\n                email: \"doe@gmail.com\"\n            };\n            const response = await axios.post(API_URL + \"/postuserinfo\", payload);\n            expect(response.status).not.to.be.equal(201);\n            expect(response.data).to.be.an(\"object\");\n        } catch (error) {\n            if (error.response) {\n                expect(error.response.status).not.to.be.equal(201);\n            } else {\n                throw error;\n            }\n        }",
              "err": {},
              "uuid": "a5f74f0d-132f-4c64-91a2-69977fdff165",
              "parentUUID": "a3be0208-0baf-4ed0-8821-d70aa69d4d9b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "770ddef1-9403-4028-b478-d10cb0cd17ae",
            "f0e73911-ea0e-4b1c-9b58-e83b583f7e2f",
            "4ac40d9d-6b84-4a57-b363-687eea72dabd",
            "a5f74f0d-132f-4c64-91a2-69977fdff165"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7c91c204-3cfe-436e-a9c2-f7163a69f8a2",
          "title": "Delete User from Database",
          "fullFile": "/home/vishesh/Documents/Mocha Chai/test/delete_user.js",
          "file": "/test/delete_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete Single User",
              "fullTitle": "Delete User from Database Delete Single User",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete(API_URL + \"/deleteuser/\" + newuser._id);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "e2c0a51b-0883-4cd3-80d9-fec87c55ce14",
              "parentUUID": "7c91c204-3cfe-436e-a9c2-f7163a69f8a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2c0a51b-0883-4cd3-80d9-fec87c55ce14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5cbf0aac-3722-444e-ae7a-5b2ee0face66",
          "title": "Get user Info",
          "fullFile": "/home/vishesh/Documents/Mocha Chai/test/get_user.js",
          "file": "/test/get_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get All User Lists",
              "fullTitle": "Get user Info Get All User Lists",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/getuserinfo\");\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"array\");",
              "err": {},
              "uuid": "11f01554-8fb2-4826-b1b8-1bac3c25b326",
              "parentUUID": "5cbf0aac-3722-444e-ae7a-5b2ee0face66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Single User",
              "fullTitle": "Get user Info Get Single User",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/singleuser/\" + newuser._id);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "a3a10252-3e36-4856-84e7-7c65c8970e7e",
              "parentUUID": "5cbf0aac-3722-444e-ae7a-5b2ee0face66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have all the property for each user",
              "fullTitle": "Get user Info Should have all the property for each user",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/singleuser/\" + newuser._id);\nexpect(response.data.name).to.be.equal(\"Jessica\");\nresponse.data.should.have.property(\"name\");\nresponse.data.should.have.property(\"email\");\nresponse.data.should.have.property(\"age\");\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "4cb01221-5950-4845-9406-2afded2f4696",
              "parentUUID": "5cbf0aac-3722-444e-ae7a-5b2ee0face66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11f01554-8fb2-4826-b1b8-1bac3c25b326",
            "a3a10252-3e36-4856-84e7-7c65c8970e7e",
            "4cb01221-5950-4845-9406-2afded2f4696"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 50,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bac3c8e4-dc5d-4e9c-a488-ed29a23019d5",
          "title": "Update User Information",
          "fullFile": "/home/vishesh/Documents/Mocha Chai/test/update_user.js",
          "file": "/test/update_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update Single User All the Information Together",
              "fullTitle": "Update User Information Update Single User All the Information Together",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n            name: \"Jon Doe to new user Becham\",\n            email: \"doe@gmail.com\",\n            age: 21\n        };\n        const response = await axios.put(API_URL + \"/updateuser/\" + newuser._id, payload);\n        expect(response.status).to.be.equal(200);\n        expect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "643ca967-3325-479e-b646-4f7ba6422ec6",
              "parentUUID": "bac3c8e4-dc5d-4e9c-a488-ed29a23019d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Name",
              "fullTitle": "Update User Information Update Single User Name",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n            name: \"Jon Doe to new user Michael\",\n        };\n        const response = await axios.put(API_URL + \"/updateuser/\" + newuser._id, payload);\n        expect(response.status).to.be.equal(200);\n        expect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "ba69987f-2242-49e9-b2fb-74cab350b32e",
              "parentUUID": "bac3c8e4-dc5d-4e9c-a488-ed29a23019d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User email",
              "fullTitle": "Update User Information Update Single User email",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n            email: \"doe@gmail.com\",\n        };\n        const response = await axios.put(API_URL + \"/updateuser/\" + newuser._id, payload);\n        expect(response.status).to.be.equal(200);\n        expect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "6b7c38d4-13ea-4de9-ad65-76a4490682d3",
              "parentUUID": "bac3c8e4-dc5d-4e9c-a488-ed29a23019d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Age",
              "fullTitle": "Update User Information Update Single User Age",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n            age: 21\n        };\n        const response = await axios.put(API_URL + \"/updateuser/\" + newuser._id, payload);\n        expect(response.status).to.be.equal(200);\n        expect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "0344f6db-509d-4c83-a5f8-eb9e9e92b230",
              "parentUUID": "bac3c8e4-dc5d-4e9c-a488-ed29a23019d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User With wrong User ID",
              "fullTitle": "Update User Information Update Single User With wrong User ID",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n            const payload = {\n                name: \"Jon Doe to new user Jesica\",\n                email: \"doe@gmail.com\",\n                age: 21\n            };\n            const response = await axios.put(API_URL + \"/updateuser/\" + 8989899, payload);\n            expect(response.status).not.to.be.equal(200);\n            expect(response.data).to.be.an(\"object\");\n        } catch (error) {\n            if (error.response) {\n                expect(error.response.status).not.to.be.equal(200);\n            } else {\n                throw error;\n            }\n        }",
              "err": {},
              "uuid": "84c802d0-ea9f-49ec-b9b3-7a7da6e64234",
              "parentUUID": "bac3c8e4-dc5d-4e9c-a488-ed29a23019d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Information With New E-mail",
              "fullTitle": "Update User Information Update Single User Information With New E-mail",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    email: \"jondoe@gmail.com\"\n};\nconst response = await axios.put(API_URL + \"/updateuser/\" + newuser._id, payload);\nexpect(response.status).to.be.equal(200);\nexpect(response.data.email).not.to.be.equal(payload);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "8b6692ed-ab0b-421a-9e89-95f802d2f90a",
              "parentUUID": "bac3c8e4-dc5d-4e9c-a488-ed29a23019d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Information With New Age",
              "fullTitle": "Update User Information Update Single User Information With New Age",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    age: 20\n};\nconst response = await axios.put(API_URL + \"/updateuser/\" + newuser._id, payload);\nexpect(response.status).to.be.equal(200);\nexpect(response.data.age).not.to.be.equal(payload);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "37ccc872-c694-4852-abdd-4c21ea71c7f9",
              "parentUUID": "bac3c8e4-dc5d-4e9c-a488-ed29a23019d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "643ca967-3325-479e-b646-4f7ba6422ec6",
            "ba69987f-2242-49e9-b2fb-74cab350b32e",
            "6b7c38d4-13ea-4de9-ad65-76a4490682d3",
            "0344f6db-509d-4c83-a5f8-eb9e9e92b230",
            "84c802d0-ea9f-49ec-b9b3-7a7da6e64234",
            "8b6692ed-ab0b-421a-9e89-95f802d2f90a",
            "37ccc872-c694-4852-abdd-4c21ea71c7f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 75,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}